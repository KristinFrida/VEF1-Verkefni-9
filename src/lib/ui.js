import { getLaunch, searchLaunches } from './api.js';
import { el } from './elements.js';

/**
 * B√Ωr til leitarform.
 * @param {(e: SubmitEvent) => void} searchHandler Fall sem keyrt er √æegar leita√∞ er.
 * @param {string | undefined} query Leitarstrengur.
 * @returns {HTMLElement} Leitarform.
 */
export function renderSearchForm(searchHandler, query = undefined) {
  const form = el(
    'form',
    {},
    el('input', { value: query ?? '', name: 'query' }),
    el('button', {}, 'Leita')
  );

  form.addEventListener('submit', searchHandler);

  return form;
}

/**
 * Setur ‚Äûloading state‚Äú skilaba√∞ me√∞an g√∂gn eru s√≥tt.
 * @param {HTMLElement} parentElement Element sem √° a√∞ birta skilbao√∞ √≠.
 * @param {Element | undefined} searchForm Leitarform sem √° a√∞ gera √≥virkt.
 */
function setLoading(parentElement, searchForm = undefined) {
  // √ûegar vi√∞ f√∂rum inn√≠ loadingstate √¶tlum vi√∞ a√∞ finna loading state element. 
  let loadingElement = parentElement.querySelector('.loading');

  // Sem er a√∞ segja okkur a√∞ vi√∞ erum a√∞ s√¶kja √æessi g√∂gn
  // Ef √æa√∞ finnst ekki, √¶tlum vi√∞ a√∞ b√∫a √æa√∞ til 
  if (!loadingElement) {
    loadingElement = el('div', { class: 'loading' }, 'S√¶ki g√∂gn...');
    // og b√¶tum √æv√≠ vi√∞ parentelementi√∞ okkar
    parentElement.appendChild(loadingElement);
  }

  // ef √æa√∞ er ekkert form, √æ√° bara h√¶ttum vi√∞. 
  if (!searchForm) {
    return;
  }

  // annars √¶tlum vi√∞ a√∞ finna takkan
  const button = searchForm.querySelector('button');
  // og gera hann disabled
  if (button) {
    button.setAttribute('disabled', 'disabled');
  }
}

/**
 * Fjarl√¶gir ‚Äûloading state‚Äú.
 * @param {HTMLElement} parentElement Element sem inniheldur skilabo√∞.
 * @param {Element | undefined} searchForm Leitarform sem √° a√∞ gera virkt.
 */
function setNotLoading(parentElement, searchForm = undefined) {
  // √æegar vi√∞ erum h√¶tt a√∞ leita, √æ√° b√∂kkum vi√∞ og finnum loading elementi√∞
  const loadingElement = parentElement.querySelector('.loading');

  // ef vi√∞ finnum √æa√∞ √æ√° fjarl√¶gjum vi√∞ √æa√∞
  if (loadingElement) {
    loadingElement.remove();
  }

  // ef √æa√∞ er ekki form, √æ√° h√¶ttum vi√∞(√©g) vi√∞
  if (!searchForm) {
    return;
  }


  // ef √æa√∞ er form, √¶tlum vi√∞ a√∞ finna takkan sem er disabled, og fjarl√¶gja attributi√∞ disabled 
  // af honum
  const disabledButton = searchForm.querySelector('button[disabled]');

  if (disabledButton) {
    disabledButton.removeAttribute('disabled');
  }
}

/**
 * Birta ni√∞urst√∂√∞ur √∫r leit.
 * @param {import('./api.types.js').Launch[] | null} results Ni√∞urst√∂√∞ur √∫r leit
 * @param {string} query Leitarstrengur.
 */
function createSearchResults(results, query) {
  const list = el('ul', { class: 'results' });

  if (!results) {
    const noResultsElement = el('li', {}, `Villa vi√∞ leit a√∞ ${query}`);
    list.appendChild(noResultsElement);
    return list;
  }

  if (results.length === 0) {
    const noResultsElement = el(
      'li',
      {},
      `Engar ni√∞urst√∂√∞ur fyrir leit a√∞ ${query}`
    );
    list.appendChild(noResultsElement);
    return list;
  }



  const headerElement = el(
    'div',
    { class: 'results' },
    el('h4', { class: 'result_title' }, `Leitarni√∞urst√∂√∞ur fyrir ‚Äû${query}"`
    ),
  );

  list.appendChild(headerElement);

  for (const result of results) {
    const resultElement = el(
      'div',
      { class: 'result' },
      el('p', { class: 'result__mission' }, el('a', { href: `/?id=${result.id}` }, result.name)),
      el('p', { class: 'result__status' }, `üöÄ ${result.status.name}`),
      el('p', { class: 'result__name' }, el('span', { class: 'feitletra_geimferd' }, 'Geimfer√∞:'), ` ${result.mission}`),
    );

    list.appendChild(resultElement);
  }

  return list;
}

/**
 *
 * @param {HTMLElement} parentElement Element sem √° a√∞ birta ni√∞urst√∂√∞ur √≠.
 * @param {Element} searchForm Form sem √° a√∞ gera √≥virkt.
 * @param {string} query Leitarstrengur.
 */
export async function searchAndRender(parentElement, searchForm, query) {
  // N√∫na √¶tlum vi√∞ a√∞ finna main elementi√∞, af √æv√≠ vi√∞ erum h√©r buin a√∞ b√∫a √æa√∞ til
  const mainElement = parentElement.querySelector('main');

  if (!mainElement) {
    console.warn('fann ekki <main> element');
    return;
  }

  // Fjarl√¶gja fyrri ni√∞urst√∂√∞ur.
  // Erum b√∫in a√∞ b√∫a √æa√∞ til me√∞ results klasanum, ef results finnst √æ√° fjarl√¶gjum vi√∞ hann
  const resultsElement = mainElement.querySelector('.results');
  if (resultsElement) {
    // remove fjarl√¶gir results n√≥√∞una √∫r DOMinu
    resultsElement.remove();
  }

  // setLoading endurspeglar a√∞ vi√∞ s√©um a√∞ leita
  setLoading(mainElement, searchForm)
  const results = await searchLaunches(query);
  // setLoading endurspeglar a√∞ vi√∞ s√©um ekki a√∞ leita 

  // birtum svo einhverjar ni√∞urst√∂√∞ur
  setNotLoading(mainElement, searchForm);

  // √¶tlum svo a√∞ b√∫a til resultsElement eins og √°√∞ur
  // hoppum √≠ √æa√∞ 
  const resultsEl = createSearchResults(results, query);

  mainElement.appendChild(resultsEl);
}

/**
 * S√Ωna fors√≠√∞u, hugsanlega me√∞ leitarni√∞urst√∂√∞um.
 * @param {HTMLElement} parentElement Element sem √° a√∞ innihalda fors√≠√∞u.
 * @param {(e: SubmitEvent) => void} searchHandler Fall sem keyrt er √æegar leita√∞ er.
 * @param {string | undefined} query Leitaror√∞, ef eitthva√∞, til a√∞ s√Ωna ni√∞urst√∂√∞ur fyrir.
 */
export function renderFrontpage(
  parentElement,
  searchHandler,
  query = undefined
) {
  const heading = el(
    'h3',
    { class: 'heading', 'data-foo': 'bar' },
    'Geimskotaleitin üöÄ'
  );
  const searchForm = renderSearchForm(searchHandler, query);

  const container = el('main', {}, heading, searchForm);
  parentElement.appendChild(container);

  if (!query) {
    return;
  }

  searchAndRender(parentElement, searchForm, query);
}

/**
 * S√Ωna geimskot.
 * H√©rna erum vi√∞ a√∞ uppf√¶ra vi√∞m√≥ti√∞ okkar.
 * @param {HTMLElement} parentElement Element sem √° a√∞ innihalda geimskot.
 * @param {string} id Au√∞kenni geimskots.
 */
export async function renderDetails(parentElement, id) {
  const container = el('main', {});
  const backElement = el(
    'div',
    { class: 'back' },
    el('a', { href: '/' }, 'Til baka')
  );

  parentElement.appendChild(container);
  parentElement.appendChild(backElement);

  /* TODO setja loading state og s√¶kja g√∂gn */
  setLoading(parentElement);
  const resultid = await getLaunch(id);
  setNotLoading(parentElement);

  // T√≥mt og villu state, vi√∞ gerum ekki greinarmun √° √æessu tvennu, ef vi√∞
  // myndum vilja gera √æa√∞ √æyrftum vi√∞ a√∞ skilgreina st√∂√∞u fyrir ni√∞urst√∂√∞u
  if (!resultid) {
    /* TODO √∫tf√¶ra villu og t√≥mt state */
    parentElement.appendChild(el('p', {}, 'Ekkert geimskot fannst. üò¢'));
    return null;
  }

  const result = await getLaunch(id);
  if (!result) {
    console.warn('fann ekki')
    return null;
  }

  const launchElement = el(
    'article',
    { class: 'launch' },
    el(
      'section',
      { class: 'info' },
      el('h1', {}, result.name),
      el(
        'div',
        { class: 'window' },
        el('p', {}, `Gluggi opnast: ${result.window_start}`),
        el('p', {}, `Gluggi lokast: ${result.window_end}`),
      ),
      el(
        'div',
        { class: 'status' },
        el('h2', {}, `Sta√∞a: ${result.status.name}`),
        el('p', {}, `${result.status.description}`),
      ),
      el(
        'div',
        { class: 'mission' },
        el('h2', {}, `Geimfer√∞: ${result.mission.name}`),
        el('p', {}, `${result.mission.description}`),
      ),
    ),
    el('div', { class: 'image' }, el('img', { src: result.image, alt: '' })),
    backElement
  );

  container.appendChild(launchElement);

  return null;

}
